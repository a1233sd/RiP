# Generated by Django 4.2.7 on 2024-10-13 00:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Decree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Черновик'), (2, 'В работе'), (3, 'Завершена'), (4, 'Отклонена'), (5, 'Удалена')], default=1, verbose_name='Статус')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('date_formation', models.DateTimeField(blank=True, null=True, verbose_name='Дата формирования')),
                ('date_complete', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
                'db_table': 'decrees',
                'ordering': ('-date_created',),
            },
        ),
        migrations.CreateModel(
            name='DecreeStudents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.CharField(blank=True, null=True, verbose_name='м-м')),
            ],
            options={
                'verbose_name': 'Связь студент-заявка',
                'verbose_name_plural': 'Связи студент-заявка',
                'db_table': 'decree_students',
            },
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('course', models.IntegerField()),
                ('group', models.CharField(max_length=50)),
                ('number', models.CharField(max_length=50)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('debt_count', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Действует'), (2, 'Удалена')], default=1, verbose_name='Статус')),
            ],
            options={
                'db_table': 'students',
            },
        ),
        migrations.AddConstraint(
            model_name='students',
            constraint=models.UniqueConstraint(fields=('name', 'number'), name='unique_name_number'),
        ),
        migrations.AddField(
            model_name='decreestudents',
            name='decree',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.decree', verbose_name='Заявка'),
        ),
        migrations.AddField(
            model_name='decreestudents',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.students', verbose_name='Студент'),
        ),
        migrations.AddField(
            model_name='decree',
            name='moderator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='decree_moderator', to=settings.AUTH_USER_MODEL, verbose_name='Модератор'),
        ),
        migrations.AddField(
            model_name='decree',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='decree_owner', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='decree',
            name='students',
            field=models.ManyToManyField(through='app.DecreeStudents', to='app.students'),
        ),
        migrations.AlterUniqueTogether(
            name='decreestudents',
            unique_together={('decree', 'student')},
        ),
    ]
